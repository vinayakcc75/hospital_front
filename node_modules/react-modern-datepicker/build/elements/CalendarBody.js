"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _DateView = _interopRequireDefault(require("./DateView"));

var _MonthView = _interopRequireDefault(require("./MonthView"));

var _YearView = _interopRequireDefault(require("./YearView"));

var _Wrapper = _interopRequireDefault(require("./Wrapper"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var CalendarBody = function CalendarBody(props) {
  var viewFor = props.viewFor,
      date = props.date,
      format = props.format,
      onChange = props.onChange,
      yearBlock = props.yearBlock,
      maxDate = props.maxDate,
      minDate = props.minDate,
      primaryColor = props.primaryColor,
      secondaryColor = props.secondaryColor,
      primaryTextColor = props.primaryTextColor,
      secondaryTextColor = props.secondaryTextColor;
  return _react["default"].createElement(_Wrapper["default"], {
    secondaryColor: secondaryColor
  }, viewFor === 'date' && _react["default"].createElement(_DateView["default"], {
    date: date,
    format: format,
    maxDate: maxDate,
    minDate: minDate,
    onDateChange: function onDateChange(value) {
      return onChange(value, 'date');
    },
    primaryColor: primaryColor,
    primaryTextColor: primaryTextColor,
    secondaryColor: secondaryColor,
    secondaryTextColor: secondaryTextColor
  }), viewFor === 'month' && _react["default"].createElement(_MonthView["default"], {
    date: date,
    format: format,
    maxDate: maxDate,
    minDate: minDate,
    onMonthChange: function onMonthChange(value) {
      return onChange(value, 'month');
    },
    primaryColor: primaryColor,
    primaryTextColor: primaryTextColor,
    secondaryColor: secondaryColor,
    secondaryTextColor: secondaryTextColor
  }), viewFor === 'year' && _react["default"].createElement(_YearView["default"], {
    date: date,
    format: format,
    maxDate: maxDate,
    minDate: minDate,
    onYearChange: function onYearChange(value) {
      return onChange(value, 'year');
    },
    primaryColor: primaryColor,
    primaryTextColor: primaryTextColor,
    secondaryColor: secondaryColor,
    secondaryTextColor: secondaryTextColor,
    yearBlock: yearBlock
  }));
};

CalendarBody.propTypes = {
  date: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].object]),
  format: _propTypes["default"].string,
  maxDate: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].object]),
  minDate: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].object]),
  onChange: _propTypes["default"].func,
  primaryColor: _propTypes["default"].string,
  primaryTextColor: _propTypes["default"].string,
  secondaryColor: _propTypes["default"].string,
  secondaryTextColor: _propTypes["default"].string,
  viewFor: _propTypes["default"].string,
  yearBlock: _propTypes["default"].number
};
var _default = CalendarBody;
exports["default"] = _default;