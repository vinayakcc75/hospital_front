{"ast":null,"code":"var _jsxFileName = \"/Users/vinayak/Desktop/hospital_front/src/Components/Landing Page/BookSlot.js\";\nimport React from 'react';\nimport './AboutUs.css';\nimport TimeSlotsCalender from './TimeSlotsCalender';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport './BookSlot.css';\nimport ModernDatepicker from 'react-modern-datepicker';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment'; //YYYY-MM-DD\n//HH:MI:SS\n\nlet a = [];\nlet blockedDates = [];\nlet doctorsArray = ['ram'];\n\nclass BookSlot extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = async date => {\n      await this.setState({\n        date\n      });\n      await this.setState({\n        current_date: date\n      }, () => console.log(this.state.current_date));\n      console.log('block', blockedDates);\n\n      if (blockedDates.includes(date)) {\n        this.setState({\n          slotsOpen: false\n        });\n        alert('Doctor not available on this day !');\n      } else {\n        fetch(`/api/appointments/time_available`, {\n          method: 'put',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            doctor_id: this.state.doctor_id,\n            date: this.state.current_date\n          })\n        }).then(response => response.json()).then(async ret => {\n          if (ret.status === true) {\n            if (ret.message !== undefined) {\n              const temp = [];\n              ret.message.map(time => {\n                temp.push(time.time);\n              });\n              this.setState({\n                disabledSlots: temp\n              }, () => console.log(this.state.disabledSlots));\n            }\n          }\n        });\n        await this.setState({\n          slotsOpen: true\n        });\n      }\n    };\n\n    this.componentDidMount = () => {\n      fetch(`/api/register/department`, {\n        method: 'get',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => response.json()).then(async ret => {\n        if (ret.status === true) {\n          a = [];\n          this.setState({\n            arr: ret.message\n          }, () => console.log(this.state.arr));\n          if (this.state.arr.length > 0) this.state.arr.map(arr => {\n            a.push(arr.department_name);\n          });\n          console.log(a);\n        }\n      });\n    };\n\n    this.getDeptID = async a => {\n      this.setState({\n        doctor: \"Select Doctor\"\n      });\n      await this.setState({\n        dept: a.value\n      });\n      await this.state.arr.map(arr => {\n        if (arr.department_name === a.value) {\n          this.setState({\n            dept_id: arr.department_id\n          }, () => console.log(this.state.dept_id));\n        }\n      });\n      fetch(`/api/department/doctor`, {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          department_id: this.state.dept_id\n        })\n      }).then(response => response.json()).then(async ret => {\n        if (ret.status === true) {\n          this.docArr = \"\";\n          await this.setState({\n            docArr: ret.message\n          });\n          doctorsArray = [];\n          if (this.state.docArr.length > 0) this.state.docArr.map(arr => {\n            doctorsArray.push(arr.doctor);\n          });\n        }\n\n        this.setState({\n          now: true\n        });\n      });\n    };\n\n    this.slotemailChange = event => {\n      this.setState({\n        patientEmail: event.target.value\n      });\n    };\n\n    this.slotnameChange = event => {\n      this.setState({\n        patientName: event.target.value\n      });\n    };\n\n    this.slotphoneChange = event => {\n      this.setState({\n        patientPhone: event.target.value\n      });\n    };\n\n    this.getDocID = async a => {\n      await this.setState({\n        doctor: a.value\n      }, () => console.log(this.state.doctor));\n      this.state.docArr.map(arr => {\n        if (arr.doctor === a.value) {\n          this.setState({\n            doctor_id: arr.doctor_id\n          }, () => console.log('docid', this.state.doctor_id));\n        }\n      });\n      fetch(`/api/appointments/date_available`, {\n        method: 'put',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          doctor_id: this.state.doctor_id\n        })\n      }).then(response => response.json()).then(async ret => {\n        if (ret.status === true) {\n          console.log(ret);\n\n          if (ret.message.length > 0) {\n            // alert('Sorry Doctor not avaialable');\n            blockedDates = [];\n            ret.message.map(a => {\n              var k = moment(a.date).format(\"YYYY-MM-DD\");\n              blockedDates.push(k);\n            });\n          }\n        }\n\n        this.setState({\n          openDates: true\n        });\n      });\n    };\n\n    this.display = () => {\n      console.log(this.state.selectedSlot, ' ', this.state.date);\n    };\n\n    this.upDate = k => {\n      this.setState({\n        selectedSlot: k\n      }, () => {\n        console.log(this.state.selectedSlot);\n      });\n    };\n\n    this.bookAppointmentNow = () => {\n      console.log('entered');\n      fetch(`/api/appointments`, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          date: this.state.date,\n          time: this.state.selectedSlot,\n          doctor_id: this.state.doctor_id,\n          patient_id: this.props.user.user_id\n        })\n      }).then(response => response.json()).then(async ret => {\n        console.log(ret, 'date', this.state.date);\n\n        if (ret.status === true) {\n          alert('Slot successfully Booked');\n          window.location.reload();\n        } // else{\n        //   alert('Please Login/Register First !')\n        //                  window.location.reload();\n        // }\n\n      });\n      console.log('exit');\n    };\n\n    this.state = {\n      dept: 'Select Department',\n      arr: \"\",\n      current_date: new Date(),\n      doctor: 'Select Doctor',\n      dept_id: \"\",\n      now: false,\n      docArr: \"\",\n      doctor_id: \"\",\n      patientEmail: '',\n      patientName: '',\n      patientPhone: '',\n      date: new Date(),\n      selectedSlot: '',\n      slotsOpen: false,\n      patientID: \"\",\n      openDates: false,\n      disabledSlots: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }\n    }, \"APPOINTMENT BOOKING \"), this.props.user.username ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }\n    }, \"Hi \", this.props.user.username, \" !!!\"), /*#__PURE__*/React.createElement(\"form\", {\n      style: {\n        marginLeft: '20%',\n        width: '60%'\n      },\n      method: \"GET\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }\n    }, \"\\u2B07\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shift\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      onChange: this.getDeptID,\n      options: a,\n      controlClassName: \"controlClassName\",\n      menuClassName: \"menuClassName\",\n      className: \"myClassName\",\n      placeholder: `${this.state.dept}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(Dropdown, {\n      options: doctorsArray,\n      onChange: this.getDocID,\n      controlClassName: \"controlClassName\",\n      menuClassName: \"menuClassName\",\n      className: \"myClassName\",\n      placeholder: `${this.state.doctor}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }\n    }, \"\\u2B07\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"head\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }\n    }, \"Select a date to fix an appointment\"), this.state.openDates && /*#__PURE__*/React.createElement(ModernDatepicker, {\n      className: \"color\",\n      date: this.state.date,\n      format: 'YYYY-MM-DD',\n      showBorder: true,\n      onChange: date => this.onChange(date),\n      placeholder: 'Select a date',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 32\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }\n    }, \"\\u2B07\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }\n    }, \"Select a time slot\"), this.state.slotsOpen && /*#__PURE__*/React.createElement(TimeSlotsCalender, {\n      upDate: this.upDate,\n      disabledSlots: this.state.disabledSlots,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"solo\",\n      type: \"button\",\n      onClick: this.bookAppointmentNow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }\n    }, \"Book Slot\")))) : /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        \"textDecoration\": \"underline\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }\n    }, \"Please Login First\")));\n  }\n\n}\n\nexport default BookSlot;","map":{"version":3,"sources":["/Users/vinayak/Desktop/hospital_front/src/Components/Landing Page/BookSlot.js"],"names":["React","TimeSlotsCalender","Dropdown","ModernDatepicker","Link","moment","a","blockedDates","doctorsArray","BookSlot","Component","constructor","props","onChange","date","setState","current_date","console","log","state","includes","slotsOpen","alert","fetch","method","headers","body","JSON","stringify","doctor_id","then","response","json","ret","status","message","undefined","temp","map","time","push","disabledSlots","componentDidMount","arr","length","department_name","getDeptID","doctor","dept","value","dept_id","department_id","docArr","now","slotemailChange","event","patientEmail","target","slotnameChange","patientName","slotphoneChange","patientPhone","getDocID","k","format","openDates","display","selectedSlot","upDate","bookAppointmentNow","patient_id","user","user_id","window","location","reload","Date","patientID","render","username","marginLeft","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './AboutUs.css';\nimport TimeSlotsCalender from './TimeSlotsCalender'\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport './BookSlot.css';\nimport ModernDatepicker from 'react-modern-datepicker';\nimport {Link} from 'react-router-dom';\nimport moment from 'moment';\n//YYYY-MM-DD\n//HH:MI:SS\nlet a=[];\nlet blockedDates=[];\nlet doctorsArray=['ram'];\n\nclass BookSlot extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            dept:'Select Department',\n            arr:\"\",\n            current_date:new Date(),\n            doctor:'Select Doctor',\n            dept_id:\"\",\n            now:false,\n            docArr:\"\",\n            doctor_id:\"\",\n            patientEmail:'',\n            patientName:'',\n            patientPhone:'',\n            date:new Date(),\n            selectedSlot:'',\n            slotsOpen:false,\n            patientID:\"\",\n            openDates:false,\n            disabledSlots:\"\"\n        }\n  }\n\n  onChange = async (date) =>{\n      await this.setState({date})\n      await this.setState({ current_date:date },()=>console.log(this.state.current_date));\n      console.log('block',blockedDates);\n      if(blockedDates.includes(date)){\n        this.setState({slotsOpen:false});\n        alert('Doctor not available on this day !')\n      }\n      else{\n       fetch(`/api/appointments/time_available`, {\n          method: 'put',\n          headers: {'Content-Type': 'application/json'},\n          body:JSON.stringify({\n              doctor_id:this.state.doctor_id,\n              date:this.state.current_date\n          })\n        })\n        .then(response => response.json())\n        .then(async ret => {\n          if (ret.status===true) {\n            if(ret.message!==undefined){\n            const temp=[];\n            ret.message.map((time)=>{temp.push(time.time)});\n             this.setState({disabledSlots:temp},()=>console.log(this.state.disabledSlots));\n            }\n          }\n        })\n        await this.setState({slotsOpen:true});\n      }\n  }\n \n    componentDidMount=()=>{\n        fetch(`/api/register/department`, {\n          method: 'get',\n          headers: {'Content-Type': 'application/json'},\n        })\n        .then(response => response.json())\n        .then(async ret => {\n          if (ret.status===true) {\n             a=[];\n            this.setState({arr: ret.message},()=>console.log(this.state.arr));\n            if(this.state.arr.length>0)\n            this.state.arr.map((arr)=>{a.push(arr.department_name)});\n            console.log(a);\n          }\n        })\n    }\n\n     getDeptID=async(a)=>{\n       this.setState({doctor:\"Select Doctor\"})\n        await(this.setState({dept:a.value}));\n        await(this.state.arr.map(arr=>{\n            if(arr.department_name===a.value){\n                this.setState({dept_id:arr.department_id},()=>console.log(this.state.dept_id))\n            }\n        }))\n        fetch(`/api/department/doctor`, {\n          method: 'put',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            department_id:this.state.dept_id\n          })\n        })\n        .then(response => response.json())\n        .then(async (ret) => {\n          if (ret.status===true) {\n            this.docArr=\"\";\n            await(this.setState({docArr: ret.message}));\n            doctorsArray=[];\n            if(this.state.docArr.length>0)\n            this.state.docArr.map((arr)=>{doctorsArray.push(arr.doctor)})\n          }\n            this.setState({now:true})\n         })\n     }\n    slotemailChange=(event)=>{\n        this.setState({patientEmail:event.target.value});\n    }\n    slotnameChange=(event)=>{\n        this.setState({patientName:event.target.value});\n    }\n    slotphoneChange=(event)=>{\n        this.setState({patientPhone:event.target.value});\n    }\n    getDocID=async(a)=>{\n        await(this.setState({doctor:a.value},()=>console.log(this.state.doctor)));\n        this.state.docArr.map(arr=>{\n            if(arr.doctor===a.value){\n              this.setState({doctor_id:arr.doctor_id},()=>console.log('docid',this.state.doctor_id))\n            }\n        })\n        fetch(`/api/appointments/date_available`, {\n          method: 'put',\n          headers: {'Content-Type': 'application/json'},\n          body: JSON.stringify({\n            doctor_id:this.state.doctor_id\n          })\n        })\n        .then(response => response.json())\n        .then(async (ret) => {\n          if (ret.status===true) {\n            console.log(ret)\n            if(ret.message.length>0){\n              // alert('Sorry Doctor not avaialable');\n              blockedDates=[];\n              ret.message.map((a)=>{\n                var k=moment(a.date).format(\"YYYY-MM-DD\")\n                blockedDates.push(k);\n              })\n            }\n          }\n          this.setState({openDates:true});\n         })\n    }\n    display=()=>{\n      console.log(this.state.selectedSlot,' ',this.state.date)\n    }\n    upDate=(k)=>{\n      this.setState({selectedSlot:k},()=>{\n        console.log(this.state.selectedSlot)\n      })\n\n    }\n    bookAppointmentNow=()=>{\n      console.log('entered')\n      fetch(`/api/appointments`, {\n          method: 'post',\n          headers: {'Content-Type': 'application/json'},\n          body:JSON.stringify({\n              date:this.state.date,\n              time:this.state.selectedSlot,\n              doctor_id:this.state.doctor_id,\n              patient_id:this.props.user.user_id\n            })\n        })\n        .then(response => response.json())\n        .then(async ret => {\n          console.log(ret,'date' ,this.state.date)\n          if (ret.status===true) {\n               alert('Slot successfully Booked');\n               window.location.reload();\n\n          }\n          // else{\n          //   alert('Please Login/Register First !')\n          //                  window.location.reload();\n\n          // }\n        })\n        console.log('exit')\n\n    }\n    render(){\n    return(\n        <div >\n        <h1>APPOINTMENT BOOKING </h1>\n        {(this.props.user.username)?(\n          <div>\n        <h2>Hi {this.props.user.username} !!!</h2>\n        <form  style={{marginLeft:'20%', width:'60%'}} method='GET'>\n\n        <h3>⬇</h3>\n        <div className=\"shift\" >\n        <Dropdown \n        onChange={this.getDeptID} \n        options={a}\n        controlClassName=\"controlClassName\"\n        menuClassName=\"menuClassName\"\n        className=\"myClassName\"\n        placeholder={`${this.state.dept}`} />\n        <br/><br/>\n        <Dropdown \n        options={doctorsArray}\n        onChange={this.getDocID} \n        controlClassName=\"controlClassName\"\n        menuClassName=\"menuClassName\"\n        className=\"myClassName\"\n        placeholder={`${this.state.doctor}`} />\n        <br/>\n        <h3>⬇</h3>\n        </div>\n        <div className='head'>\n        <h3>Select a date to fix an appointment</h3>\n        {this.state.openDates&&<ModernDatepicker\n          className=\"color\"\n          date={this.state.date}\n          format={'YYYY-MM-DD'}\n          showBorder\n          onChange={date => this.onChange(date)}\n          placeholder={'Select a date'}\n        />}\n        <br/><br/>\n        <h3>⬇</h3>\n        <h3>Select a time slot</h3>\n        {this.state.slotsOpen && \n        <TimeSlotsCalender \n        upDate={this.upDate} disabledSlots={this.state.disabledSlots}/>}\n        <button id=\"solo\" type=\"button\" onClick={this.bookAppointmentNow} >Book Slot</button>\n        </div>\n        </form>\n        </div>\n        ):\n        <h2 style={{\"textDecoration\":\"underline\"}}>\n          <Link to='/'>\n          Please Login First\n          </Link>\n          </h2>}\n        </div>\n    );}\n    }\n\n export default BookSlot; "]},"metadata":{},"sourceType":"module"}