{"ast":null,"code":"var _jsxFileName = \"/Users/vinayak/Desktop/hospital_front/src/Components/Doctor View/Views/NewEntry.js\";\nimport React from 'react';\nimport './NewEntry.css';\nimport * as yup from 'yup'; // for everything\n\nconst schema = yup.object().shape({\n  patientid: yup.number().required().positive(),\n  patientname: yup.string().required(),\n  diagnosis: yup.string().required(),\n  prescription: yup.string()\n});\n\nclass NewEntry extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.diagnosisChange = event => {\n      this.setState({\n        diagnosis: event.target.value\n      });\n    };\n\n    this.presChange = event => {\n      this.setState({\n        prescription: event.target.value\n      });\n    };\n\n    this.submit = () => {\n      fetch(`/api/save_medical_records`, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: this.props.patientId,\n          doctor: this.state.fname + ' ' + this.state.lname,\n          dept: this.state.department,\n          symptoms: this.state.diagnosis,\n          prescribed: this.state.prescription\n        })\n      }).then(response => response.json()).then(async ret => {\n        console.log(ret);\n\n        if (ret.status === true) {\n          console.log(ret, this.state, this.props);\n          alert('Record Saved !');\n        } else {\n          alert('Enter Valid Patient ID !');\n        }\n      });\n    };\n\n    this.state = {\n      diagnosis: \"\",\n      prescription: \"\",\n      fname: \"\",\n      lname: \"\",\n      department: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(`/api/profile`, {\n      method: 'get',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(ret => {\n      console.log(ret);\n\n      if (ret.status === true) {\n        this.setState({\n          fname: ret.message[0].firstname\n        });\n        this.setState({\n          lname: ret.message[0].lastname\n        });\n        this.setState({\n          department: ret.message2.department_name\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"entry\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 10\n      }\n    }, \"New Entry\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"patient id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 14\n      }\n    }, \"Patient Id\"), \": \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 16\n      }\n    }, this.props.patientId), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 65\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 70\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 75\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"patient name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 14\n      }\n    }, \"Patient Name\"), \": \", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, this.props.patientName), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 66\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 71\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 76\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"diagnosis\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, \"Diagnosis\"), \": \", /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"text\",\n      rows: \"14\",\n      cols: \"10\",\n      wrap: \"soft\",\n      onChange: this.diagnosisChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 47\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 52\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"prescription\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, \"Prescription\"), \": \", /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"text\",\n      rows: \"14\",\n      cols: \"10\",\n      wrap: \"soft\",\n      onChange: this.presChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 46\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 51\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.submit,\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nexport default NewEntry;","map":{"version":3,"sources":["/Users/vinayak/Desktop/hospital_front/src/Components/Doctor View/Views/NewEntry.js"],"names":["React","yup","schema","object","shape","patientid","number","required","positive","patientname","string","diagnosis","prescription","NewEntry","Component","constructor","props","diagnosisChange","event","setState","target","value","presChange","submit","fetch","method","headers","body","JSON","stringify","user_id","patientId","doctor","state","fname","lname","dept","department","symptoms","prescribed","then","response","json","ret","console","log","status","alert","componentDidMount","message","firstname","lastname","message2","department_name","render","patientName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './NewEntry.css';\nimport * as yup from 'yup'; // for everything\n\nconst schema = yup.object().shape({\n  patientid: yup.number().required().positive(),\n  patientname: yup.string().required(),\n  diagnosis:yup.string().required(),\n  prescription:yup.string()\n});\n \nclass NewEntry extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            diagnosis:\"\",\n            prescription:\"\",\n            fname:\"\",\n            lname:\"\",\n            department:\"\"\n        }\n    }\n    diagnosisChange=(event)=>{\n        this.setState({diagnosis:event.target.value})\n    }\n    presChange=(event)=>{\n        this.setState({prescription:event.target.value})\n    }\n    componentDidMount(){\n      fetch(`/api/profile`,{\n       method: 'get',\n       headers: {'Content-Type': 'application/json'}\n     })\n       .then(response=>response.json())\n       .then(ret=>{\n         console.log(ret)\n         if(ret.status===true){\n           this.setState({fname:ret.message[0].firstname});\n           this.setState({lname:ret.message[0].lastname});\n           this.setState({department:ret.message2.department_name});\n         }\n       }\n       )\n      }\n    submit=()=>{\n        fetch(`/api/save_medical_records`, {\n          method: 'post',\n          headers: {'Content-Type': 'application/json'},\n          body:JSON.stringify({\n            user_id:this.props.patientId,\n            doctor:this.state.fname+' '+this.state.lname,\n            dept:this.state.department,\n            symptoms:this.state.diagnosis,\n            prescribed:this.state.prescription\n          })\n        })\n        .then(response => response.json())\n        .then(async ret => {\n          console.log(ret);\n\n          if (ret.status===true){\n              console.log(ret,this.state,this.props);\n            alert('Record Saved !')\n        }\n        else{\n            alert('Enter Valid Patient ID !');        \n          }\n        })\n  }\n    \n    render(){\n    return(\n        <div className=\"entry\">\n        <br/>\n         <h1>New Entry</h1>\n         <form>\n             <br/><br/>\n             <label htmlFor=\"patient id\">Patient Id</label>\n             : <div className=\"wid\">{this.props.patientId}</div><br/><br/><br/>\n\n             <label htmlFor=\"patient name\">Patient Name</label>\n            : <div className=\"wid\">{this.props.patientName}</div><br/><br/><br/>\n\n            <label htmlFor=\"diagnosis\">Diagnosis</label>\n            : <textarea \n            name=\"text\" rows=\"14\" cols=\"10\" wrap=\"soft\"\n            onChange={this.diagnosisChange} /><br/><br/><br/>\n\n            <label htmlFor=\"prescription\">Prescription</label> \n            : <textarea \n            name=\"text\" rows=\"14\" cols=\"10\" wrap=\"soft\"\n            onChange={this.presChange}/><br/><br/><br/>\n            <button onClick={this.submit} type=\"button\">Submit</button>\n         </form>\n        </div>\n    );}\n}\nexport default NewEntry;\n"]},"metadata":{},"sourceType":"module"}